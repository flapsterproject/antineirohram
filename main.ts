// main.ts
import { serve } from "https://deno.land/std@0.224.0/http/server.ts";

const TOKEN = Deno.env.get("BOT_TOKEN"); // —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const SECRET_PATH = "/sarcasm"; // –ø—É—Ç—å –¥–ª—è –≤–µ–±—Ö—É–∫–∞
const TELEGRAM_API = `https://api.telegram.org/bot${TOKEN}`;

// –ù–∞–±–æ—Ä —Å–∞—Ä–∫–∞—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—Ä–∞–∑
const sarcasticReplies = [
  "–û, –Ω–∞—à –ª—é–±–∏–º—ã–π –æ—Ä–∞—Ç–æ—Ä —Å–Ω–æ–≤–∞ –≤ –¥–µ–ª–µ üòè",
  "–ë–µ–∑ —Ç–µ–±—è —Ç—É—Ç —Ç–∞–∫ —Å–∫—É—á–Ω–æ –±—ã–ª–æ –±—ã üòÇ",
  "–ú–∏—Ä –∑–∞—Ç–∞–∏–ª –¥—ã—Ö–∞–Ω–∏–µ, —á–∏—Ç–∞—è —Ç–≤–æ–∏ —Å–ª–æ–≤–∞ ü§°",
  "–¢–∞–∫ –≥–ª—É–±–æ–∫–æ, —á—Ç–æ —è —á—É—Ç—å –Ω–µ —É—Ç–æ–Ω—É–ª üôÉ",
  "–ì–µ–Ω–∏–π –º—ã—Å–ª–∏ –∏ –æ—Ç–µ—Ü —Å–∞—Ä–∫–∞–∑–º–∞ ‚ú®",
  "–õ—É—á—à–µ –±—ã —Ç—ã –∫–Ω–∏–≥—É –Ω–∞–ø–∏—Å–∞–ª üìñ",
  "–ù—É –≤—Å—ë, –ø–æ—à—ë–ª –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —ç—Ç–æ –≤ —Ü–∏—Ç–∞—Ç–Ω–∏–∫ üò¨",
];

function getRandomReply() {
  return sarcasticReplies[Math.floor(Math.random() * sarcasticReplies.length)];
}

serve(async (req: Request) => {
  const { pathname } = new URL(req.url);

  // –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –ø—É—Ç—å
  if (pathname !== SECRET_PATH) {
    return new Response("Bot is running.", { status: 200 });
  }

  if (req.method !== "POST") {
    return new Response("Method Not Allowed", { status: 405 });
  }

  const update = await req.json();
  const message = update.message;
  const chatId = message?.chat?.id;
  const username = message?.from?.username;

  if (!chatId || !username) return new Response("No chat ID or username", { status: 200 });

  // —Ä–µ–∞–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ @neirohambot
  if (username === "neirohambot" && message.text) {
    const reply = getRandomReply();

    await fetch(`${TELEGRAM_API}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: chatId,
        text: reply,
        reply_to_message_id: message.message_id,
      }),
    });
  }

  return new Response("OK", { status: 200 });
});
