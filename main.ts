// main.ts
import { serve } from "https://deno.land/std@0.224.0/http/server.ts";

const TOKEN = Deno.env.get("BOT_TOKEN"); // —Ç–≤–æ–π –±–æ—Ç-—Ç–æ–∫–µ–Ω
const TELEGRAM_API = `https://api.telegram.org/bot${TOKEN}`;
const SECRET_PATH = "/sarcasm"; // –ø—É—Ç—å –≤–µ–±—Ö—É–∫–∞

// –°–∞—Ä–∫–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã
const sarcasticReplies = [
  (text: string) => `–û–≥–æ, @neirohambot –ø–∏—à–µ—Ç: "${text}"‚Ä¶ –Ω—É —á—Ç–æ –∂, —à–µ–¥–µ–≤—Ä! üòè`,
  (text: string) => `–í–Ω–∏–º–∞–Ω–∏–µ –≤—Å–µ–º! @neirohambot —Å–∫–∞–∑–∞–ª: "${text}" üôÑ`,
  (text: string) => `–ë—Ä–∞–≤–æ, @neirohambot, –≤–∞—à –≤–∫–ª–∞–¥ –≤ –±–µ—Å–µ–¥—É: "${text}" ü§®`,
  (text: string) => `"${text}" ‚Äî —Ç–∞–∫ –≥–æ–≤–æ—Ä–∏–ª @neirohambot. –ò—Å—Ç–∏–Ω–Ω–∞—è –º—É–¥—Ä–æ—Å—Ç—å! üòÇ`,
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendMessage(chat_id: number | string, text: string) {
  const res = await fetch(`${TELEGRAM_API}/sendMessage`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ chat_id, text, parse_mode: "HTML" }),
  });

  const data = await res.json();
  if (!data.ok) console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", data);
}

// HTTP —Å–µ—Ä–≤–µ—Ä Deno –¥–ª—è –≤–µ–±—Ö—É–∫–∞
serve(async (req: Request) => {
  const { pathname } = new URL(req.url);

  if (pathname !== SECRET_PATH) return new Response("Bot is running.", { status: 200 });
  if (req.method !== "POST") return new Response("Method Not Allowed", { status: 405 });

  const update = await req.json();
  const message = update.message;
  const chatId = message?.chat?.id;
  const text = message?.text;

  if (!chatId || !text) return new Response("No chat ID or text", { status: 200 });

  // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @neirohambot
  if (message.from?.username === "neirohambot") {
    const replyFunc = sarcasticReplies[Math.floor(Math.random() * sarcasticReplies.length)];
    const replyText = replyFunc(text);
    await sendMessage(chatId, replyText);
  }

  return new Response("OK", { status: 200 });
});

