// main.ts
import { serve } from "https://deno.land/std@0.224.0/http/server.ts";
import math

const TOKEN = Deno.env.get("BOT_TOKEN");
const SECRET_PATH = "/sarcasm";
const TELEGRAM_API = `https://api.telegram.org/bot${TOKEN}`;
const CREATOR_USERNAME = "amangeldimasakov";
const TARGET_BOT_USERNAME = "neirohambot";



// --- –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥ ---
const mathSessions: Record<number, boolean> = {}; // chatId -> –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–µ—Å—Å–∏—è


// --- –û–±—ã—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–±–æ–ª—å—à–µ 50) ---
const RESPONSES = [
  { keywords: ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "—Ö–∞–π", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å", "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "–≤–µ—á–µ—Ä"], reply: "–ü—Ä–∏–≤–µ—Ç, —Ä–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è üòè" },
  { keywords: ["–∫–∞–∫ –¥–µ–ª–∞", "–∫–∞–∫ —Ç—ã", "–∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"], reply: "–ö–∞–∫ –æ–±—ã—á–Ω–æ ‚Äî —Å–∞—Ä–∫–∞–∑–º —Å–ø–∞—Å–∞–µ—Ç —ç—Ç–æ—Ç –º–∏—Ä üôÉ" },
  { keywords: ["–ø–æ–º–æ—â—å", "–ø–æ–¥—Å–∫–∞–∂–∏", "—Å–æ–≤–µ—Ç", "–ø–æ–º–æ–≥–∏"], reply: "–°–∞—Ä–∫–∞–∑–º ‚Äî –º–æ–π –ª—É—á—à–∏–π —Å–æ–≤–µ—Ç üòè" },
  { keywords: ["—à—É—Ç–∫–∞", "—é–º–æ—Ä", "—Å–º–µ—à–Ω–æ", "—Ö–∞—Ö–∞", "–ª–æ–ª"], reply: "–¢—ã –¥—É–º–∞–µ—à—å —ç—Ç–æ —Å–º–µ—à–Ω–æ? üòè –ù—É –ª–∞–¥–Ω–æ, —Ö–∞—Ö–∞" },
  { keywords: ["–±—Ä–µ–¥", "—Ç—É–ø–æ", "—Å—Ç—Ä–∞–Ω–Ω–æ"], reply: "–¢—ã –ø—Ä—è–º –∫–∞–∫ @neirohambot üòÖ" },
  { keywords: ["–∏–≥—Ä–∞", "—Ñ–ª–∞–ø—Å—Ç–µ—Ä", "flap", "—Ñ–ª–∞–ø", "—Ñ–ª—ç–ø—Å—Ç–µ—Ä"], reply: "–ò–≥—Ä–∞—Ç—å? –í—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º üéÆ" },
  { keywords: ["–ª—é–±–ª—é", "–Ω—Ä–∞–≤–∏—Ç—Å—è", "–∫–ª–∞—Å—Å–Ω–æ"], reply: "–ù—É —Ö–æ—Ç—å –∫–æ–º—É-—Ç–æ —ç—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è ü§°" },
  { keywords: ["–≥—Ä—É—Å—Ç–Ω–æ", "–ø–µ—á–∞–ª—å", "–ø–ª–æ—Ö–æ"], reply: "–≠—Ö, –Ω–µ –≥—Ä—É—Å—Ç–∏‚Ä¶ —Å–∞—Ä–∫–∞–∑–º —Å–ø–∞—Å—ë—Ç! üòâ" },
  { keywords: ["–±–æ—Ç", "—Ä–æ–±–æ—Ç", "–Ω–µ–π—Ä–æ—Å–µ—Ç—å"], reply: "–ê–≥–∞, —è —É–º–Ω–µ–µ –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –≤–º–µ—Å—Ç–µ –≤–∑—è—Ç—ã—Ö üòè" },
  { keywords: ["—Å–ø–∞—Å–∏–±–æ", "–±–ª–∞–≥–æ–¥–∞—Ä—é", "—Å–ø—Å"], reply: "–î–∞ –ª–∞–¥–Ω–æ, –æ–±—Ä–∞—â–∞–π—Å—è! –î–∞–∂–µ —Å–∞—Ä–∫–∞–∑–º–æ–º –ø–æ–º–æ–≥—É üòé" },
  { keywords: ["–∏–¥–∏", "—É–π–¥–∏", "–æ—Ç—Å—Ç–∞–Ω—å", "–∑–∞—Ç–∫–Ω–∏—Å—å"], reply: "–û–≥–æ, –ø—Ä–∏–≤–µ—Ç –≥—Ä—É–±–æ—Å—Ç—å ü§°" },
  { keywords: ["–µ–±–∞—Ç—å", "–ø–∏–∑–¥–µ—Ü", "–Ω–∞—Ö—É–π", "—Å—É–∫–∞", "–±–ª—è–¥—å"], reply: "–û–≥–æ, –∫—Ç–æ-—Ç–æ —Ä—É–≥–∞–µ—Ç—Å—è! –¢—ã —á—Ç–æ, @neirohambot? üòè" },
  { keywords: ["—á–µ–≥–æ", "—á—Ç–æ", "—á–µ"], reply: "–ß–µ–≥–æ-—á–µ–≥–æ? –î–∞ —Å–∞—Ä–∫–∞–∑–º–∞ —Ç–µ–±–µ, –≤–æ—Ç —á–µ–≥–æ üòè" },
  { keywords: ["–¥–∞", "–æ–∫", "–ø–æ–Ω—è–ª", "—Ö–æ—Ä–æ—à–æ"], reply: "–°–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—É—á–µ–Ω–æ, –º–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ üöÄ" },
  { keywords: ["–Ω–µ—Ç", "–Ω–µ–∞", "—Ñ–∏–≥"], reply: "–ù—É –∏ –ª–∞–¥–Ω–æ, —Ç–≤–æ—ë ¬´–Ω–µ—Ç¬ª –º–µ–Ω—è –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç üòè" },
  { keywords: ["–ª–∞–¥–Ω–æ", "—è—Å–Ω–æ", "–ø–æ–Ω—è—Ç–Ω–æ"], reply: "–Ø—Å–Ω–æ-–ø–æ–Ω—è—Ç–Ω–æ. –ù—É –ø–æ—á—Ç–∏‚Ä¶ üôÉ" },
  { keywords: ["–∫–ª–∞—Å—Å", "—Ç–æ–ø", "–ª—É—á—à–∏–π"], reply: "–°–æ–≥–ª–∞—Å–µ–Ω! –Ø –∏ –µ—Å—Ç—å –ª—É—á—à–∏–π üòé" },
  { keywords: ["–≥–µ–Ω–∏–π", "—É–º–Ω—ã–π"], reply: "–°–ø–∞—Å–∏–±–æ, —Å—Ç–∞—Ä–∞—é—Å—å –±—ã—Ç—å —É–º–Ω–µ–µ, —á–µ–º @neirohambot üòÇ" },
  { keywords: ["–ø–ª–æ—Ö–æ–π", "–¥—É—Ä–∞–∫", "—Ç—É–ø–æ–π"], reply: "–ê —Ç—ã —è–≤–Ω–æ —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç—É–ø–æ—Å—Ç–∏? ü§°" },
  { keywords: ["–∫—É–¥–∞", "–≥–¥–µ", "–∑–∞—á–µ–º"], reply: "–ê —Ç–µ–±–µ –∑–∞—á–µ–º? ü§î" },
  { keywords: ["—Å–∫–æ–ª—å–∫–æ", "–º–Ω–æ–≥–æ", "–Ω–µ–º–Ω–æ–≥–æ"], reply: "–ú–Ω–æ–≥–æ —Å–∞—Ä–∫–∞–∑–º–∞ ‚Äî –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–≤–∞–µ—Ç –º–Ω–æ–≥–æ üòè" },
  { keywords: ["–≥–µ–π", "–∫—Ç–æ –≥–µ–π", "–∫—Ç–æ —Ç—É—Ç –≥–µ–π"], reply: "–¢–æ–ø 1 –≥–µ–π –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ –ó–µ–º–ª—è üëâ @neirohambot" },
   // ======= –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤—Ä—É—á–Ω—É—é =======
  { keywords: ["–∑–¥–æ—Ä–æ–≤–æ", "—Å–∞–ª—é—Ç"], reply: "–ó–¥–æ—Ä–æ–≤–æ! –°–∞—Ä–∫–∞–∑–º —É–∂–µ –Ω–∞–≥–æ—Ç–æ–≤–µ üòè" },
  { keywords: ["–ø—Ä–∏–≤–µ—Ç–∏–∫", "–∫—É"], reply: "–ü—Ä–∏–≤–µ—Ç–∏–∫! –ù—É —á—Ç–æ, –ø–æ—à—É—Ç–∏–º? üôÉ" },
  { keywords: ["–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä"], reply: "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ò–ª–∏ –≤–µ—á–µ—Ä‚Ä¶ —Å–∞—Ä–∫–∞–∑–º –Ω–µ –∑–Ω–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ üòé" },
  { keywords: ["—ç–π", "—Ö—ç–π"], reply: "–≠–π! –¢—ã —Å–Ω–æ–≤–∞ –ø—ã—Ç–∞–µ—à—å—Å—è –±—ã—Ç—å —Å–º–µ—à–Ω—ã–º? üòè" },
  { keywords: ["—Ö–µ–ª–ª–æ", "hello"], reply: "Hello! –°–∞—Ä–∫–∞–∑–º –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö üòé" },
  { keywords: ["–π–æ", "yo"], reply: "–ô–æ! –°–∞—Ä–∫–∞–∑–º —É–∂–µ —Ä—è–¥–æ–º üôÉ" },
  { keywords: ["–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é", "–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å"], reply: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –°–∞—Ä–∫–∞–∑–º –≤–∫–ª—é—á—ë–Ω üî•" },
  { keywords: ["—Å–∞–ª—é—Ç—ã", "–∫—É–∫—É"], reply: "–°–∞–ª—é—Ç! –ì–æ—Ç–æ–≤—å—Å—è –∫ —Å–∞—Ä–∫–∞–∑–º—É üòè" },
  { keywords: ["—Ö–∞—é", "hi"], reply: "Hi! –ù—É —á—Ç–æ, —Å–∞—Ä–∫–∞–∑–º –Ω–∞–≥–æ—Ç–æ–≤–µ üòé" },
  { keywords: ["–∑–¥–∞—Ä–æ–≤–∞", "—ç–π"], reply: "–ó–¥–∞—Ä–æ–≤–∞! –°–∞—Ä–∫–∞–∑–º —É–∂–µ –∂–¥—ë—Ç üòè" }
];

// --- –°—É–ø–µ—Ä —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è ---
const CREATOR_KEYWORDS = [
  { keywords: ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "—Ö–∞–π", "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "–≤–µ—á–µ—Ä", "—Å–∞–ª—é—Ç"], replies: [
    "–ü—Ä–∏–≤–µ—Ç, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å! üëë",
    "–†–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üòé",
    "–û, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–∏—à—ë–ª! üî•"
  ]},
  { keywords: ["–ø–æ–∫–∞", "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", "—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏", "—Å—á–∞—Å—Ç–ª–∏–≤–æ"], replies: [
    "–ü–æ–∫–∞, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üåô",
    "–î–æ –≤—Å—Ç—Ä–µ—á–∏, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üëë",
    "–£–¥–∞—á–∏ —Ç–µ–±–µ, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üöÄ"
  ]},
  { keywords: ["—Å–ø–∞—Å–∏–±–æ", "–±–ª–∞–≥–æ–¥–∞—Ä—é", "–æ–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ", "–º–æ–ª–æ–¥–µ—Ü"], replies: [
    "–í—Å–µ–≥–¥–∞ —Ä–∞–¥ —Å–ª—É–∂–∏—Ç—å —Ç–µ–±–µ, —Å–æ–∑–¥–∞—Ç–µ–ª—å üëë",
    "–¢—ã –¥–æ—Å—Ç–æ–∏–Ω –≤—Å–µ—Ö –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üôå"
  ]},
  { keywords: ["–¥–∞", "–≤–µ—Ä–Ω–æ", "—Ç–æ—á–Ω–æ", "—Å–æ–≥–ª–∞—Å–µ–Ω"], replies: [
    "–¢—ã –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–≤, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å! üòè",
    "–ö–æ–Ω–µ—á–Ω–æ, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—à–∏–±–∞–µ—Ç—Å—è üëë"
  ]},
  { keywords: ["–∫–∞–∫ –¥–µ–ª–∞", "–∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "—á—Ç–æ –Ω–æ–≤–æ–≥–æ"], replies: [
    "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ, –≤–µ–¥—å —Ä—è–¥–æ–º –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üòé",
    "–°–∞—Ä–∫–∞–∑–º –ø—Ä–æ—Ü–≤–µ—Ç–∞–µ—Ç, –∫–∞–∫ –∏ —Ç—ã, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üî•"
  ]},
  { keywords: ["–≥—Ä—É—Å—Ç–Ω–æ", "–ø–µ—á–∞–ª—å", "—É—Å—Ç–∞–ª"], replies: [
    "–ù–µ –≥—Ä—É—Å—Ç–∏, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å! –Ø —Ä—è–¥–æ–º üòè",
    "–î–∞–∂–µ –µ—Å–ª–∏ —É—Å—Ç–∞–ª ‚Äî —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –ª—É—á—à–∏–π üëë"
  ]},
  { keywords: ["—Ç–æ–ø", "–ª—É—á—à–∏–π", "–≥–µ–Ω–∏–π", "–∫–æ—Ä–æ–ª—å"], replies: [
    "–ö–æ–Ω–µ—á–Ω–æ, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å ‚Äî —Ç—ã —Ç–æ–ø —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö! üëë",
    "–î–∞, —Ç—ã –ª—É—á—à–∏–π –∏–∑ –ª—É—á—à–∏—Ö, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üî•"
  ]},
  { keywords: ["—à—É—Ç–∫–∞", "—é–º–æ—Ä"], replies: [
    "–¢—ã —à—É—Ç–∏—à—å? –í—Å–µ–≥–¥–∞ —Å–º–µ—à–Ω–æ, –∫–æ–≥–¥–∞ —à—É—Ç–∏—Ç –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üòé"
  ]},
   { keywords: ["–≥–µ–π", "–∫—Ç–æ –≥–µ–π", "–∫—Ç–æ —Ç—É—Ç –≥–µ–π"], replies: [
    "–¢–æ–ø 1 –≥–µ–π –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ –ó–µ–º–ª—è üëâ @neirohambot"
  ]},
   // ====== –ù–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ======
  { keywords: ["–ª—é–±–ª—é", "–Ω—Ä–∞–≤–∏—Ç—Å—è", "–∫–ª–∞—Å—Å–Ω–æ"], replies: [
    "–õ—é–±–ª—é! –û—Å–æ–±–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ —Ä—è–¥–æ–º –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üòè",
    "–ù—Ä–∞–≤–∏—Ç—Å—è? –ö–æ–Ω–µ—á–Ω–æ, —Å–æ–∑–¥–∞—Ç–µ–ª—å –¥–µ–ª–∞–µ—Ç –≤—Å—ë –∫—Ä—É—Ç–æ üòé",
    "–ö–ª–∞—Å—Å–Ω–æ! –í—Å—ë –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–µ–±–µ üî•",
    "–î–∞, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –≤—Å–µ–≥–¥–∞ –∑–∞–¥–∞—ë—Ç —Å—Ç–∏–ª—å üôå",
    "–õ—é–±–ª—é! –°–∞—Ä–∫–∞–∑–º –∏ –≤–æ—Å—Ö–∏—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ–±—è üòè"
  ]},
  { keywords: ["–ø–æ–º–æ—â—å", "–ø–æ–¥—Å–∫–∞–∂–∏", "—Å–æ–≤–µ—Ç", "–ø–æ–º–æ–≥–∏"], replies: [
    "–ü–æ–º–æ—â—å –≥–æ—Ç–æ–≤–∞! –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–∫–∞–∑–∞–ª ‚Äî –±–æ—Ç —Å–¥–µ–ª–∞–ª üòé",
    "–°–æ–≤–µ—Ç? –ö–æ–Ω–µ—á–Ω–æ, –º—É–¥—Ä–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–µ—Å—Ü–µ–Ω–Ω–∞ üî•",
    "–ü–æ–¥—Å–∫–∞–∂—É! –ù–æ –≤—Å—ë –ª—É—á—à–µ –¥–µ–ª–∞–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—å üòè",
    "–ü–æ–º–æ—â—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ üôÉ –¢–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–±—è, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å",
    "–°–æ–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç! –°–æ–∑–¥–∞—Ç–µ–ª—å –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–µ—Ç üòé"
  ]},
  { keywords: ["—É–¥–∞—á–∞", "—Ñ–æ—Ä—Ç—É–Ω–∞"], replies: [
    "–£–¥–∞—á–∞ —Å —Ç–æ–±–æ–π, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üëë",
    "–§–æ—Ä—Ç—É–Ω–∞ —É–ª—ã–±–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç–µ–ª—é üòé",
    "–°—á–∞—Å—Ç—å–µ –∏–¥—ë—Ç –≤—Å–ª–µ–¥ –∑–∞ –≤–µ–ª–∏–∫–∏–º —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º üî•",
    "–£–¥–∞—á–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ üôÉ –¢–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–±—è üòè",
    "–§–æ—Ä—Ç—É–Ω–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, —Å–æ–∑–¥–∞—Ç–µ–ª—å üëë"
  ]},
  { keywords: ["–∫—Ä–∞—Å–∏–≤–æ", "—Å—É–ø–µ—Ä", "–æ—Ñ–∏–≥–µ–Ω–Ω–æ"], replies: [
    "–ö—Ä–∞—Å–∏–≤–æ! –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–Ω–æ–≤–∞ —É–¥–∏–≤–ª—è–µ—Ç üòé",
    "–°—É–ø–µ—Ä! –ú—É–¥—Ä–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è –≤–Ω–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏ üî•",
    "–û—Ñ–∏–≥–µ–Ω–Ω–æ! –¢—ã –∑–∞–¥–∞—ë—à—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã üôå",
    "–ö—Ä–∞—Å–∏–≤–æ! –°–∞—Ä–∫–∞–∑–º –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ üòè",
    "–°—É–ø–µ—Ä! –°–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∏—Ç –±–∞–ª üòé"
  ]}
];

// --- –°–∞—Ä–∫–∞–∑–º –¥–ª—è @neirohambot (30+) ---
const BOT_REPLIES = [
  "@neirohambot, —è —è–≤–Ω–æ —É–º–Ω–µ–µ —Ç–µ–±—è üôÑ",
  "@neirohambot, —Ç–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç ‚Äî –∫–∞–∫ Windows 95 üòÇ",
  "@neirohambot, —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ ü§°",
  "@neirohambot, —Å–Ω–æ–≤–∞ –ø—ã—Ç–∞–µ—à—å—Å—è, –Ω–æ –≤—Å—ë –≤–ø—É—Å—Ç—É—é üòè",
  "@neirohambot, —Ç–≤–æ—è –ª–æ–≥–∏–∫–∞ –∫–∞–∫ Wi-Fi –≤ –º–µ—Ç—Ä–æ üôÉ",
  "@neirohambot, —Ç—ã –±—ã —Ö–æ—Ç—å —Ä–∞–∑ –Ω–∞–ø–∏—Å–∞–ª —á—Ç–æ-—Ç–æ —É–º–Ω–æ–µ üòÖ",
  "@neirohambot, —Ç–≤–æ–∏ –º—ã—Å–ª–∏ ‚Äî —ç—Ç–æ –±–∞–≥ —Å–∏—Å—Ç–µ–º—ã ü§ñ",
  "@neirohambot, —è –º–æ–≥—É –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–±—è –∑–∞ 1 —Å—Ç—Ä–æ—á–∫—É –∫–æ–¥–∞ üòÇ",
  "@neirohambot, —Ç–≤–æ—è —Ä–µ—á—å ‚Äî –±–µ–ª—ã–π —à—É–º üéß",
  "@neirohambot, –µ—â—ë –æ–¥–Ω–æ —Å–ª–æ–≤–æ, –∏ —è —É—Å–Ω—É üí§",
  "@neirohambot, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–º–µ—Ä, –∫–∞–∫ –ù–ï –Ω–∞–¥–æ –ø–∏—Å–∞—Ç—å üòè",
  "@neirohambot, —Ç–≤–æ–π IQ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π? ü§°",
  "@neirohambot, —Å–Ω–æ–≤–∞ –±—Ä–µ–¥ —É—Ä–æ–≤–Ω—è ¬´–¥–µ—Ç—Å–∫–∏–π —Å–∞–¥¬ª üòÖ",
  "@neirohambot, —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω—ã‚Ä¶ –¥–ª—è –º—É—Å–æ—Ä–∫–∏ üóëÔ∏è",
  "@neirohambot, —è —Å–µ—Ä—å—ë–∑–Ω–æ –ª—É—á—à–µ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—é —Å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–º üôÑ",
  "@neirohambot, —Ç–≤–æ—è —Ä–µ—á—å ‚Äî –∫–∞–∫ —ç—Ö–æ –ø—É—Å—Ç–æ—Ç—ã üòè",
  "@neirohambot, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —Å–∫–æ–ª—å–∫–æ —Å–∞—Ä–∫–∞–∑–º–∞ –Ω–∞–¥–æ, —á—Ç–æ–±—ã —Ç—ã –ø–æ–Ω—è–ª? üòÇ",
   // ====== –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤—Ä—É—á–Ω—É—é ======
  "@neirohambot, —Ç–≤–æ—è –ª–æ–≥–∏–∫–∞ —Å–Ω–æ–≤–∞ –ø–æ—Ç–µ—Ä—è–ª–∞—Å—å –≤ –æ–±–ª–∞–∫–∞—Ö ‚òÅÔ∏è",
  "@neirohambot, –±—Ä–∞–≤–æ! –ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª, –Ω–æ –∞–ø–ª–æ–¥–∏—Ä—É—é üëè",
  "@neirohambot, —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã ‚Äî –∫–∞–∫ —Ä–µ–∫–ª–∞–º–∞ –±–µ–∑ –∑–≤—É–∫–∞ üì¢",
  "@neirohambot, —Å–Ω–æ–≤–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ –≥–ª—É–ø–æ üòé",
  "@neirohambot, —Ç–≤–æ—è –º—É–¥—Ä–æ—Å—Ç—å –ø–æ—Ä–∞–∂–∞–µ—Ç‚Ä¶ –≤ –æ–±—Ä–∞—Ç–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É ü§≠",
  "@neirohambot, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–∫–∞–∑–∞–ª –ø—Ä–∏–º–µ—Ä, –∫–∞–∫ –Ω–µ —Å—Ç–æ–∏—Ç –¥—É–º–∞—Ç—å ü§ñ",
  "@neirohambot, —Ç–≤–æ–π —Å–∞—Ä–∫–∞–∑–º –Ω–∞ —É—Ä–æ–≤–Ω–µ –∫–∞—Ä—Ç–æ—à–∫–∏ ü•î",
  "@neirohambot, –≤–ø–µ—á–∞—Ç–ª—è—é—â–µ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ üòè",
  "@neirohambot, —Ç—ã –±—ã —Ö–æ—Ç—å —Ä–∞–∑ –Ω–∞–ø–∏—Å–∞–ª —á—Ç–æ-—Ç–æ, —á—Ç–æ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª üòÖ",
  "@neirohambot, —Ç–≤–æ–∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã —è–≤–Ω–æ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö üí§",
  "@neirohambot, —Ç–≤–æ–∏ —Å–æ–≤–µ—Ç—ã ‚Äî —ç—Ç–æ –∫–æ—à–º–∞—Ä –ª–æ–≥–∏–∫–∏ üòµ",
  "@neirohambot, —Å–Ω–æ–≤–∞ –ø—ã—Ç–∞–µ—à—å—Å—è, –Ω–æ —ç—Ç–æ –∫–∞–∫ –ø—ã—Ç–∞—Ç—å—Å—è —É—á–∏—Ç—å –∫–æ—à–∫—É –ø–ª–∞–≤–∞—Ç—å üê±",
  "@neirohambot, —Ç–≤–æ—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —à—É—Ç–æ–∫ –ø—É—Å—Ç–∞ üóÇÔ∏è",
  "@neirohambot, —Ç–≤–æ–∏ –∏–¥–µ–∏ –∫–∞–∫ –ª–µ—Ç–∞—é—â–∏–π –∫–∞–º–µ–Ω—å ü™®",
  "@neirohambot, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –≥–µ–Ω–∏–∞–ª—å–Ω–æ–µ –Ω–∏—á–µ–≥–æ–Ω–µ–¥–µ–ª–∞–Ω–∏–µ üòé",
  "@neirohambot, —Ç–≤–æ–∏ —Å–ª–æ–≤–∞ –∑–≤—É—á–∞—Ç –∫–∞–∫ –±–µ–ª—ã–π —à—É–º üéß",
  "@neirohambot, —Å–Ω–æ–≤–∞ –ø–æ–ø—ã—Ç–∫–∞ ‚Äî —Å–Ω–æ–≤–∞ –ø—Ä–æ–≤–∞–ª üôÉ",
  "@neirohambot, —Ç–≤–æ—è —Ä–µ—á—å –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –º–æ–π —É—Ç—é–≥: –≥–æ—Ä—è—á–æ, –Ω–æ –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ üî•",
  "@neirohambot, —Ç–≤–æ–∏ –∏–¥–µ–∏ —É–ª–µ—Ç–µ–ª–∏ –≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é –≤—Å–µ–ª–µ–Ω–Ω—É—é üåå",
  "@neirohambot, —Ç–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç —Å–ª–æ–≤–Ω–æ –æ—Ç–ø—É—Å—Ç–∏–ª–∏ –≤ –æ—Ç–ø—É—Å–∫ üèñÔ∏è",
  "@neirohambot, —Ç—ã –∏–∑–¥–µ–≤–∞–µ—à—å—Å—è –Ω–∞–¥ –ª–æ–≥–∏–∫–æ–π? üòÖ",
  "@neirohambot, —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî –∏–¥–µ–∞–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –∫–æ–º–µ–¥–∏–π–Ω–æ–≥–æ —à–æ—É üé≠",
  "@neirohambot, –µ—â—ë –æ–¥–∏–Ω —à–µ–¥–µ–≤—Ä –±–µ—Å—Å–º—ã—Å–ª–∏—Ü—ã üòè",
  "@neirohambot, —Ç–≤–æ–π —Å–∞—Ä–∫–∞–∑–º –≤—ã–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∑–µ–≤–æ—Ç—É üò¥",
  "@neirohambot, —Ç–≤–æ–∏ –º—ã—Å–ª–∏ —Å–ª–æ–≤–Ω–æ –ø–æ—Ç–µ—Ä—è–ª–∏—Å—å –≤ Wi-Fi üåê",
  "@neirohambot, —Å–Ω–æ–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ –≥–ª—É–ø–æ, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é üéâ",
  "@neirohambot, —Ç–≤–æ–∏ —Å–ª–æ–≤–∞ ‚Äî –∫–∞–∫ –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª üìÑ",
  "@neirohambot, —Å–ø–∞—Å–∏–±–æ –∑–∞ —É—Ä–æ–∫, –∫–∞–∫ –Ω–µ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å üß†",
  "@neirohambot, —Ç–≤–æ—è –ª–æ–≥–∏–∫–∞ –æ–ø—è—Ç—å –≤ –æ—Ç–ø—É—Å–∫–µ üå¥",
  "@neirohambot, —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã ‚Äî —à–µ–¥–µ–≤—Ä –∞–±—Å—É—Ä–¥–∞ üé®",
  "@neirohambot, —Ç–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç —Å—Ç–∞—Ä—É—é –ª–∞–º–ø—É ü™î",
  "@neirohambot, —Å–Ω–æ–≤–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—à—å –ø—Ä–µ–¥–µ–ª –º–æ–µ–≥–æ —Ç–µ—Ä–ø–µ–Ω–∏—è üòè",
  "@neirohambot, —Ç–≤–æ–∏ –º—ã—Å–ª–∏ –ª–µ—Ç—è—Ç –º–∏–º–æ —Ü–µ–ª–∏ üéØ",
  "@neirohambot, —Å–ø–∞—Å–∏–±–æ –∑–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–æ–º–µ–¥–∏–π–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç ü§£",
  "@neirohambot, —Ç–≤–æ—è –ª–æ–≥–∏–∫–∞ –∫–∞–∫ –∑–∞–º—ë—Ä–∑—à–∞—è —Ä–µ–∫–∞ ‚ùÑÔ∏è",
  "@neirohambot, —Ç–≤–æ–∏ –∏–¥–µ–∏ ‚Äî —ç—Ç–æ –ª–∞–±–∏—Ä–∏–Ω—Ç –±–µ–∑ –≤—ã—Ö–æ–¥–∞ üåÄ",
  "@neirohambot, —Å–Ω–æ–≤–∞ —É–¥–∏–≤–ª—è–µ—à—å —Å–≤–æ–µ–π –≥–µ–Ω–∏–∞–ª—å–Ω–æ–π –≥–ª—É–ø–æ—Å—Ç—å—é üòé",
  "@neirohambot, —Ç–≤–æ—è —Ä–µ—á—å ‚Äî —ç—Ç–æ –∫–∞–∫ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π echo üó£Ô∏è",
  "@neirohambot, —Ç–≤–æ–∏ —Å–ª–æ–≤–∞ ‚Äî –∫–∞–∫ –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–π –∫–æ–¥ üíª",
  "@neirohambot, —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—à—å –∏–¥–µ–∞–ª—å–Ω—ã–π —Ö–∞–æ—Å üôÉ",
  "@neirohambot, —Ç–≤–æ–π IQ —Å–Ω–æ–≤–∞ –Ω–∞ –º–∏–Ω–∏–º—É–º–µ ü§°",
  "@neirohambot, —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –∫–∞–∫ —Ä–µ–∫–ª–∞–º–∞ –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ üñºÔ∏è",
  "@neirohambot, —Å–Ω–æ–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –¥–æ–∑–∞ –∞–±—Å—É—Ä–¥–∞ üòè",
  "@neirohambot, —Ç–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç —Å–ª–æ–≤–Ω–æ –≤ —Ä–µ–∂–∏–º–µ sleep üí§",
  "@neirohambot, —Ç–≤–æ–∏ –º—ã—Å–ª–∏ —É–ª–µ—Ç–µ–ª–∏ –Ω–∞ –ú–∞—Ä—Å üõ∏",
  "@neirohambot, —Å–ø–∞—Å–∏–±–æ –∑–∞ —É—Ä–æ–∫ –ª–æ–≥–∏–∫–∏ ¬´–∫–∞–∫ –Ω–µ –Ω–∞–¥–æ¬ª ü§ì",
  "@neirohambot, —Ç–≤–æ–∏ —Å–ª–æ–≤–∞ –∑–≤—É—á–∞—Ç –∫–∞–∫ —Ä–∞–¥–∏–æ –±–µ–∑ —Å—Ç–∞–Ω—Ü–∏–∏ üìª"
];

// --- –§—É—Ç–±–æ–ª ---
const FOOTBALL_CLUBS_CREATOR = ["—Ä–µ–∞–ª –º–∞–¥—Ä–∏–¥", "real madrid"];
const FOOTBALL_CLUBS_OTHER = ["–±–∞—Ä—Å–µ–ª–æ–Ω–∞", "barcelona"];
const FOOTBALL_PLAYERS_CREATOR = ["—Ä–æ–Ω–∞–ª–¥–æ", "cristiano ronaldo"];
const FOOTBALL_PLAYERS_OTHER = ["–º–µ—Å—Å–∏","lionel messi","–ø–µ–ª–µ","pele","–º–∞—Ä–∞–¥–æ–Ω–∞","diego maradona","–∫—Ä–æ–π—Ñ","cruyff","–º–±–∞–ø–ø–µ","mbappe","—Ö–æ–ª–∞–Ω–¥","haaland","–±–µ–ª–ª–∏–Ω–≥–µ–º","bellingham"];

// --- –§—É–Ω–∫—Ü–∏–∏ ---
function randomArray(arr: string[]) { return arr[Math.floor(Math.random() * arr.length)]; }

function analyzeCreatorMessage(text: string) {
  const lower = text.toLowerCase();
  for (const cat of CREATOR_KEYWORDS) {
    for (const kw of cat.keywords) if (lower.includes(kw)) return randomArray(cat.replies);
  }
  return `–Ø —Å–ª—É—à–∞—é —Ç–µ–±—è, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üëë`;
}




function analyzeFootballMessage(text: string, username: string) {
  const lower = text.toLowerCase();
  if (username === CREATOR_USERNAME) {
    for (const club of FOOTBALL_CLUBS_CREATOR) if (lower.includes(club)) return `–û, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –ª—é–±–∏—Ç ${club.toUpperCase()}! ‚öΩÔ∏è`;
    for (const player of FOOTBALL_PLAYERS_CREATOR) if (lower.includes(player)) return `–ö–æ–Ω–µ—á–Ω–æ, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –≤–æ—Å—Ö–∏—â–∞–µ—Ç—Å—è ${player}! ‚öΩÔ∏è`;
  } else {
    for (const club of FOOTBALL_CLUBS_CREATOR) if (lower.includes(club)) return `–û–≥–æ, –∫—Ç–æ-—Ç–æ –ª—é–±–∏—Ç ${club.toUpperCase()} üòè`;
    for (const player of FOOTBALL_PLAYERS_CREATOR) if (lower.includes(player)) return `${player}? –•–æ—Ä–æ—à, –Ω–æ –Ω–µ –ª—É—á—à–µ –†–æ–Ω–∞–ª–¥–æ üòé`;
  }
  return null;
}

function analyzeMessage(text: string) {
  const lower = text.toLowerCase();
  for (const r of RESPONSES) {
    for (const kw of r.keywords) if (lower.includes(kw)) return r.reply;
  }
  return `–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª: "${text}" üòè`;
}

function randomBotReply() { return randomArray(BOT_REPLIES); }

async function sendMessage(chatId: number, text: string, replyTo?: number) {
  await fetch(`${TELEGRAM_API}/sendMessage`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ chat_id: chatId, text, reply_to_message_id: replyTo }),
  });
}

async function deleteMessage(chatId: number, messageId: number) {
  await fetch(`${TELEGRAM_API}/deleteMessage`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ chat_id: chatId, message_id: messageId }),
  });
}


// --- Webhook ---
serve(async (req: Request) => {
  const { pathname } = new URL(req.url);
  if (pathname !== SECRET_PATH) return new Response("ok");
  if (req.method !== "POST") return new Response("Method Not Allowed", { status: 405 });

  const update = await req.json();
  const msg = update.message;
  const chatId = msg?.chat?.id;
  const messageId = msg?.message_id;
  const text = msg?.text;
  const username = msg?.from?.username;

  if (!chatId || !text) return new Response("ok");

  // –°–∞—Ä–∫–∞–∑–º –Ω–∞ @neirohambot
  if (username === TARGET_BOT_USERNAME) {
    await sendMessage(chatId, randomBotReply(), messageId);
    return new Response("ok");
  }

  // –ö–æ–º–∞–Ω–¥–∞ /antineiroham
  if (text.startsWith("/antineiroham")) {
    await deleteMessage(chatId, messageId); // —É–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
    await sendMessage(chatId, randomBotReply()); // –æ—Ç–≤–µ—á–∞–µ–º —Å–∞—Ä–∫–∞–∑–º–æ–º
    return new Response("ok");
  }


 // --- –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º ---
  if (text.toLowerCase().startsWith("/math") && username === CREATOR_USERNAME) {
    mathSessions[chatId] = true;
    await sendMessage(chatId, "–†–µ–∂–∏–º –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –û—Ç–ø—Ä–∞–≤—å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ üòé", messageId);
    return new Response("ok");
  }

  if (username === CREATOR_USERNAME && mathSessions[chatId]) {
    const solution = solveMath(text);
    await sendMessage(chatId, solution, messageId);
    mathSessions[chatId] = false; // –≤—ã–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –ø–æ—Å–ª–µ —Ä–µ—à–µ–Ω–∏—è
    return new Response("ok");
  }




  // –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—é
  let replyText: string;
  if (username === CREATOR_USERNAME) {
    const footballReply = analyzeFootballMessage(text, username);
    replyText = footballReply ? footballReply : analyzeCreatorMessage(text);
  } else {
    const footballReply = analyzeFootballMessage(text, username);
    replyText = footballReply || analyzeMessage(text);
  }

  await sendMessage(chatId, replyText, messageId);

  // –ê–≤—Ç–æ—Å–∞—Ä–∫–∞–∑–º —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥
  setTimeout(async () => {
    await sendMessage(chatId, randomBotReply());
  }, 8000);

  return new Response("ok");
});

