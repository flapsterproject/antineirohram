// main.ts
import { serve } from "https://deno.land/std@0.224.0/http/server.ts";

const TOKEN = Deno.env.get("BOT_TOKEN"); // –∑–∞–¥–∞—ë—à—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const SECRET_PATH = "/sarcasm"; // Webhook –ø—É—Ç—å
const TELEGRAM_API = `https://api.telegram.org/bot${TOKEN}`;

// —Å–ø–∏—Å–æ–∫ "–∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö" —Å–ª–æ–≤ (–º–∞—Ç/–±—Ä–∞–Ω—å)
const BAD_WORDS = ["–±–ª—è", "—Å—É–∫–∞", "–Ω–∞—Ö—É–π", "–µ–±–∞—Ç—å", "–ø–∏–∑–¥–µ—Ü", "—Ö—É–π"];

// —Å–∞—Ä–∫–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã
const SARCASTIC_REPLIES = [
  "–û–≥–æ, –∫–∞–∫–æ–µ –∫—É–ª—å—Ç—É—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ. –ë–∞–±—É—à–∫–∞ –±—ã —Ç–æ–±–æ–π –≥–æ—Ä–¥–∏–ª–∞—Å—å ü§¶‚Äç‚ôÇÔ∏è",
  "–£—Ä–æ–≤–µ–Ω—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞: –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π. –ü—Ä—è–º –®–µ–∫—Å–ø–∏—Ä –Ω–∞—à–µ–≥–æ —á–∞—Ç–∞ üé≠",
  "–î–∞-–¥–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–π, –º—ã —Ç—É—Ç –≤—Å–µ —Å–ª–æ–≤–∞—Ä—å –ø–æ–ø–æ–ª–Ω—è–µ–º üìö",
  "–í–∞—É, –æ—á–µ—Ä–µ–¥–Ω–æ–π –ø–æ—ç—Ç –ø–æ–¥—ä–µ—Ö–∞–ª. –¢–µ–±—è —Ç–æ—á–Ω–æ –Ω–∞ –ø—Ä–µ–º–∏—é –≤—ã–¥–≤–∏–Ω—É—Ç üèÜ",
  "–ù—É –≤–æ—Ç –±–µ–∑ —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞ –º—ã –±—ã –≤–æ–æ–±—â–µ —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∏ üòÇ",
];

function containsBadWord(text: string): boolean {
  return BAD_WORDS.some((word) => text.toLowerCase().includes(word));
}

function randomReply() {
  return SARCASTIC_REPLIES[Math.floor(Math.random() * SARCASTIC_REPLIES.length)];
}

serve(async (req: Request) => {
  const { pathname } = new URL(req.url);
  if (pathname !== SECRET_PATH) {
    return new Response("Bot is running.", { status: 200 });
  }

  if (req.method !== "POST") {
    return new Response("Method Not Allowed", { status: 405 });
  }

  const update = await req.json();
  const message = update.message;
  const chatId = message?.chat?.id;
  const text = message?.text;

  if (!chatId || !text) return new Response("No message", { status: 200 });

  // –ø—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ç
  if (containsBadWord(text)) {
    await fetch(`${TELEGRAM_API}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: chatId,
        reply_to_message_id: message.message_id,
        text: randomReply(),
      }),
    });
  }

  return new Response("OK", { status: 200 });
});
