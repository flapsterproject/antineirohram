// main.ts
import { serve } from "https://deno.land/std@0.224.0/http/server.ts";

const TOKEN = Deno.env.get("BOT_TOKEN");
const SECRET_PATH = "/sarcasm";
const TELEGRAM_API = `https://api.telegram.org/bot${TOKEN}`;

// —Å–∞—Ä–∫–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã
const SARCASTIC_REPLIES = [
  "–û, @neirohambot —Å–Ω–æ–≤–∞ —Ä–µ—à–∏–ª –ø—Ä–æ—Å–≤–µ—Ç–∏—Ç—å –Ω–∞—Å üôÑ",
  "–ö–∞–∫–æ–π —Å—é—Ä–ø—Ä–∏–∑, —ç—Ç–æ –∂–µ @neirohambot üéâ",
  "–í–Ω–∏–º–∞–Ω–∏–µ, –≥–µ–Ω–∏–π –≤ —á–∞—Ç–µ! –°–ø–∞—Å–∏–±–æ, @neirohambot üòÇ",
  "–û–ø—è—Ç—å —Ç—ã, @neirohambot? –ù–µ —É—Å—Ç–∞–Ω–µ—à—å —É–¥–∏–≤–ª—è—Ç—å üé≠",
  "–ù—É —á—Ç–æ –∂, –±–µ–∑ —Ç–µ–±—è –º—ã —Ç—É—Ç –±—ã –ø—Ä–æ–ø–∞–ª–∏ üèÜ",
];

function randomReply() {
  return SARCASTIC_REPLIES[Math.floor(Math.random() * SARCASTIC_REPLIES.length)];
}

async function sendMessage(chatId: number, text: string, replyTo?: number) {
  await fetch(`${TELEGRAM_API}/sendMessage`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      chat_id: chatId,
      text,
      reply_to_message_id: replyTo,
      parse_mode: "Markdown",
    }),
  });
}

serve(async (req: Request) => {
  const { pathname } = new URL(req.url);
  if (pathname !== SECRET_PATH) return new Response("ok");
  if (req.method !== "POST") return new Response("Method Not Allowed", { status: 405 });

  const update = await req.json();
  const msg = update.message;
  const chatId = msg?.chat?.id;
  const text = msg?.text;
  const messageId = msg?.message_id;
  const username = msg?.from?.username;

  if (!chatId || !text || !username) return new Response("ok");

  // ‚úÖ —Ä–µ–∞–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @neirohambot
  if (username.toLowerCase() === "neirohambot") {
    await sendMessage(chatId, randomReply(), messageId);
  }

  return new Response("ok");
});





