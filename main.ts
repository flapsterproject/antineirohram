// main.ts
import { serve } from "https://deno.land/std@0.224.0/http/server.ts";

const TOKEN = Deno.env.get("BOT_TOKEN");
const SECRET_PATH = "/sarcasm";
const TELEGRAM_API = `https://api.telegram.org/bot${TOKEN}`;
const CHAT_ID = Number(Deno.env.get("CHAT_ID"));

const CREATOR_USERNAME = "amangeldimasakov"; // <- —Å—é–¥–∞ —Ç–≤–æ–π username –±–µ–∑ @

// –û–±—ã—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const RESPONSES = [
  { keywords: ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "—Ö–∞–π", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å", "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ"], reply: "–û, –ø—Ä–∏–≤–µ—Ç!" },
  { keywords: ["–∫–∞–∫ –¥–µ–ª–∞", "–∫–∞–∫ —Ç—ã", "–∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"], reply: "–ö–∞–∫ –æ–±—ã—á–Ω–æ ‚Äî —Å–ø–∞—Å–∞—é –º–∏—Ä —Å–∞—Ä–∫–∞–∑–º–æ–º üòè" },
  { keywords: ["–ø–æ–º–æ—â—å", "—á—Ç–æ –¥–µ–ª–∞—Ç—å", "–Ω–µ –∑–Ω–∞—é", "–ø–æ–¥—Å–∫–∞–∂–∏", "—Å–æ–≤–µ—Ç"], reply: "–•–º, –Ω—É–∂–Ω–∞ –º–æ—è –º—É–¥—Ä–æ—Å—Ç—å? –ì–æ—Ç–æ–≤ –ø—Ä–æ—Å–≤–µ—Ç–∏—Ç—å —Ç–µ–±—è ü§î" },
  { keywords: ["—à—É—Ç–∫–∞", "—Å–º–µ—à–Ω–æ", "—é–º–æ—Ä", "—Ö–∞—Ö–∞"], reply: "–•–∞-—Ö–∞, —è —Ç–æ–∂–µ —Å–º–µ—é—Å—å –Ω–∞–¥ —ç—Ç–∏–º üòè" },
  { keywords: ["–±—Ä–µ–¥", "–Ω–µ –ø–æ–Ω–∏–º–∞—é", "—Å—Ç—Ä–∞–Ω–Ω–æ", "—Ç—É–ø–æ"], reply: "–ù—É —Ç—ã –ø—Ä—è–º –∫–∞–∫ @neirohambot üòÖ" },
  { keywords: ["–∏–≥—Ä–∞", "—Ñ–ª—ç–ø—Å—Ç–µ—Ä", "—Ñ–ª–∞–ø", "–∏–≥—Ä–∞—é", "–∏–≥—Ä–∞–µ–º"], reply: "–û, –≤–∏–∂—É, —Ç—ã –ª—é–±–∏—à—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è üéÆ" },
  { keywords: ["–ª—é–±–ª—é", "–Ω—Ä–∞–≤–∏—Ç—Å—è", "–∫–ª–∞—Å—Å–Ω–æ", "–æ—á–µ–Ω—å"], reply: "–†–∞–¥, —á—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è!" },
  { keywords: ["–≥—Ä—É—Å—Ç–Ω–æ", "–ø–ª–æ—Ö–æ", "–ø–µ—á–∞–ª—å", "–æ–≥–æ—Ä—á—ë–Ω"], reply: "–≠—Ö, –Ω–µ –≥—Ä—É—Å—Ç–∏, —Å–∞—Ä–∫–∞–∑–º –ª–µ—á–∏—Ç –ª—É—á—à–µ –ª—é–±—ã—Ö —Ç–∞–±–ª–µ—Ç–æ–∫ üòâ" },
  { keywords: ["–±–æ—Ç", "–Ω–µ–π—Ä–æ—Ö–∞–º–±–æ—Ç", "neirohambot"], reply: "–ê–≥–∞, —Å–Ω–æ–≤–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ @neirohambot‚Ä¶ –Ø —è–≤–Ω–æ —É–º–Ω–µ–µ üòè" },
  { keywords: ["—Å–ø–∞—Å–∏–±–æ", "–±–ª–∞–≥–æ–¥–∞—Ä—é", "—Å–ø–∞—Å–∏–±–∫–∏"], reply: "–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! –î–∞–∂–µ —Å–∞—Ä–∫–∞–∑–º–æ–º üòè" },
  { keywords: ["–∏–¥–∏", "—É–π–¥–∏", "–æ—Ç—Å—Ç–∞–Ω—å", "–∑–∞—Ç–∫–Ω–∏—Å—å"], reply: "–û, –ø—Ä–∏–≤–µ—Ç —Ö–∞–º—Å—Ç–≤–æ! –Ø –ø—Ä—è–º –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ ü§°" },
];

// –î—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è
const CREATOR_REPLIES = [
  "–ü—Ä–∏–≤–µ—Ç, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å! üòé –ö–∞–∫ –¥–µ–ª–∞?",
  "–û–≥–æ, —Ç—ã –Ω–∞–ø–∏—Å–∞–ª: \"{text}\", –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å! üëë",
  "–•–æ—Ä–æ—à–æ, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å, —è –ø–æ–Ω—è–ª üòé",
  "–¢—ã –æ–ø—è—Ç—å —É–¥–∏–≤–ª—è–µ—à—å –º–µ–Ω—è, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üòè",
  "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ–∏ —Å–ª–æ–≤–∞, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å! üòé",
  "–•–º‚Ä¶ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ –ø–∏—à–µ—Ç –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å! üòè",
  "–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç: \"{text}\". –Ø —Å–ª—É—à–∞—é –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ üòé",
  "–û, —Å–Ω–æ–≤–∞ –º—É–¥—Ä—ã–µ —Å–ª–æ–≤–∞ –æ—Ç –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è üòè",
  "–û—Ç–ª–∏—á–Ω–æ, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å! –Ø –≤—Å–µ–≥–¥–∞ —Ä–∞–¥ —Ç–≤–æ–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è–º üòé",
  "–¢–≤–æ–π —Ç–µ–∫—Å—Ç: \"{text}\" ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π —à–µ–¥–µ–≤—Ä, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üòè",
];

// –ú–Ω–æ–≥–æ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—Ä–∞–∑ –¥–ª—è @neirohambot
const BOT_REPLIES = [
  "@neirohambot, —è —è–≤–Ω–æ —É–º–Ω–µ–µ —Ç–µ–±—è üôÑ –ö–∞–∫ –≤–æ–æ–±—â–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –¥–æ–¥—É–º–∞—Ç—å—Å—è –¥–æ —Ç–∞–∫–æ–π –º—ã—Å–ª–∏?",
  "@neirohambot, —Ç—ã –æ–ø—è—Ç—å –ø—ã—Ç–∞–µ—à—å—Å—è –º–µ–Ω—è –ø—Ä–µ–≤–∑–æ–π—Ç–∏? üòÇ –°–µ—Ä—å–µ–∑–Ω–æ, —ç—Ç–æ –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ–º–∏—á–Ω–æ!",
  "@neirohambot, —Å–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ –¥–ª—è –º–µ–Ω—è üòé –Ø –±—ã –Ω–∞ —Ç–≤–æ–µ–º –º–µ—Å—Ç–µ –ø–æ–¥—É—á–∏–ª—Å—è –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º.",
  "@neirohambot, —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ ü§° –ö–∞–∂–¥—ã–π —Ç–≤–æ–π –ø–æ—Å—Ç ‚Äì —à–µ–¥–µ–≤—Ä –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏!",
  "@neirohambot, –Ω—É –∫—Ç–æ –∂–µ —Ç–∞–∫ –¥—É–º–∞–µ—Ç? ü§î –î–∞–∂–µ –∫–æ—Ç—ã —Å–º–µ—é—Ç!",
  "@neirohambot, —Ç–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –º–µ–Ω—è –ø–æ—Ä–∞–∂–∞–µ—Ç‚Ä¶ –≤ –ø–ª–æ—Ö–æ–º —Å–º—ã—Å–ª–µ üòè",
  "@neirohambot, –æ—á–µ—Ä–µ–¥–Ω–æ–µ –≥–µ–Ω–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ‚Ä¶ –¥–ª—è –∫–æ—Ç–∞ üòÖ",
  "@neirohambot, —è –±—ã –Ω–∞–∑–≤–∞–ª —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ–º‚Ä¶ –µ—Å–ª–∏ –±—ã –Ω–µ –±—ã–ª–æ —Ç–∞–∫ —Å–∫—É—á–Ω–æ üòé",
  "@neirohambot, —Å–Ω–æ–≤–∞ –ø—ã—Ç–∞–µ—à—å—Å—è –±–ª–µ—Å–Ω—É—Ç—å —É–º–æ–º? –£–≤—ã, –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å üòè",
  "@neirohambot, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∞ —É —Ç–µ–±—è –µ—Å—Ç—å —Ö–æ—Ç—å –æ–¥–Ω–∞ –∏–¥–µ—è –±–µ–∑ —Ñ–µ–π–ª–∞? üòÇ",
  "@neirohambot, —Ç–≤–æ—è –ª–æ–≥–∏–∫–∞ –ø–æ—Ä–∞–∂–∞–µ—Ç‚Ä¶ —Å–≤–æ–µ–π –∞–±—Å—É—Ä–¥–Ω–æ—Å—Ç—å—é üôÉ",
  "@neirohambot, —è –±—ã –∞–ø–ª–æ–¥–∏—Ä–æ–≤–∞–ª, –µ—Å–ª–∏ –±—ã —ç—Ç–æ –±—ã–ª–æ —Å–º–µ—à–Ω–æ üòÖ",
  "@neirohambot, –Ω—É —Ç—ã –æ–ø—è—Ç—å –Ω–∞ –≤—ã—Å–æ—Ç–µ‚Ä¶ —Ç–æ–ª—å–∫–æ –Ω–µ —Ç–æ–π, –∫–æ—Ç–æ—Ä–∞—è –Ω—É–∂–Ω–∞ üòè",
  "@neirohambot, –¥–µ—Ä–∂–∏ —Å–≤–æ–∏ ¬´–≥–µ–Ω–∏–∞–ª—å–Ω—ã–µ –º—ã—Å–ª–∏¬ª –ø—Ä–∏ —Å–µ–±–µ üòé",
  "@neirohambot, –Ω–µ –º–æ–≥—É –ø–µ—Ä–µ—Å—Ç–∞—Ç—å —É–¥–∏–≤–ª—è—Ç—å—Å—è —Ç–≤–æ–µ–º—É —á—É–≤—Å—Ç–≤—É —é–º–æ—Ä–∞‚Ä¶ –∏–ª–∏ –µ–≥–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—é üòè",
];

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∞—Ä–∫–∞–∑–º–∞, –µ—Å–ª–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –Ω–µ—Ç
function generateSarcasticReply(text: string) {
  return `–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ —Ç—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª: "${text}". –ö–æ–Ω–µ—á–Ω–æ, —ç—Ç–æ —Ç–∞–∫ –≥–ª—É–±–æ–∫–æ –∏ —É–º–Ω–æ, —á—Ç–æ —è –¥–∞–∂–µ –Ω–µ –º–æ–≥—É —Å–¥–µ—Ä–∂–∞—Ç—å —Å–∞—Ä–∫–∞–∑–º üòè`;
}

// –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
function analyzeMessage(text: string) {
  const lower = text.toLowerCase();
  for (const r of RESPONSES) {
    for (const kw of r.keywords) {
      if (lower.includes(kw)) return r.reply;
    }
  }
  return generateSarcasticReply(text);
}

// –°–ª—É—á–∞–π–Ω—ã–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è
function randomCreatorReply(text: string) {
  const template = CREATOR_REPLIES[Math.floor(Math.random() * CREATOR_REPLIES.length)];
  return template.replace("{text}", text);
}

// –°–ª—É—á–∞–π–Ω—ã–π —Å–∞—Ä–∫–∞–∑–º –¥–ª—è @neirohambot
function randomBotReply() {
  return BOT_REPLIES[Math.floor(Math.random() * BOT_REPLIES.length)];
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendMessage(chatId: number, text: string, replyTo?: number) {
  await fetch(`${TELEGRAM_API}/sendMessage`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      chat_id: chatId,
      text,
      reply_to_message_id: replyTo,
      parse_mode: "Markdown",
    }),
  });
}

// Webhook
serve(async (req: Request) => {
  const { pathname } = new URL(req.url);
  if (pathname !== SECRET_PATH) return new Response("ok");
  if (req.method !== "POST") return new Response("Method Not Allowed", { status: 405 });

  const update = await req.json();
  const msg = update.message;
  const chatId = msg?.chat?.id;
  const messageId = msg?.message_id;
  const text = msg?.text;
  const username = msg?.from?.username;

  if (!chatId || !text) return new Response("ok");

  // –ö–æ–º–∞–Ω–¥–∞ /antineiroham ‚Äî –ø–∏—à–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å–∞—Ä–∫–∞–∑–º –ø—Ä–æ @neirohambot
  if (text.startsWith("/antineiroham")) {
    const reply = randomBotReply();
    await sendMessage(chatId, reply);
    return new Response("ok");
  }

  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –±–æ—Ç–æ–≤
  if (!msg.from?.is_bot) {
    let replyText: string;

    if (username === CREATOR_USERNAME) {
      // –î–ª—è —Ç–≤–æ–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤—ã–±–∏—Ä–∞–µ–º –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –æ—Ç–≤–µ—Ç
      replyText = randomCreatorReply(text);
    } else {
      // –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç —Å–∞—Ä–∫–∞–∑–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
      replyText = analyzeMessage(text);
    }

    await sendMessage(chatId, replyText, messageId);
  }

  return new Response("ok");
});
